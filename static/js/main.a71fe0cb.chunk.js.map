{"version":3,"sources":["App.js","index.js"],"names":["App","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","_useState4","data","setData","_useState5","_useState6","symbolFilter","setSymbolFilter","_useState7","_useState8","dteFilter","setDteFilter","_useState9","_useState10","mprofitFilter","setMprofitFilter","_useState11","_useState12","mlossFilter","setMlossFilter","_useState13","_useState14","mpoddsFilter","setMpoddsFilter","_useState15","_useState16","mloddsFilter","setMloddsFilter","_useState17","_useState18","ivrFilter","setIvrFilter","_useState19","_useState20","p3tFilter","setP3tFilter","_useState21","_useState22","sortConfig","setSortConfig","dollarUS","Intl","NumberFormat","style","currency","handleSort","column","direction","sortedData","React","useMemo","sortableData","toConsumableArray","map","item","expectancy","mprofit","mpodds","mloss","mlodds","filter","symbol","days","ivr","sort","a","b","react_default","createElement","Container","fluid","Row","className","Form","onSubmit","e","preventDefault","parsedData","JSON","parse","error","console","value","onChange","target","Button","type","variant","size","length","Table","responsive","onClick","placeholder","toUpperCase","index","key","format","Math","round","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.a71fe0cb.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Form,\r\n  Button,\r\n  Table\r\n} from 'react-bootstrap';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [symbolFilter, setSymbolFilter] = useState(\"\");\r\n  const [dteFilter, setDteFilter] = useState(\"\");\r\n  const [mprofitFilter, setMprofitFilter] = useState(\"\");\r\n  const [mlossFilter, setMlossFilter] = useState(\"\");\r\n  const [mpoddsFilter, setMpoddsFilter] = useState(\"\");\r\n  const [mloddsFilter, setMloddsFilter] = useState(\"\");\r\n  const [ivrFilter, setIvrFilter] = useState(\"\");\r\n  const [p3tFilter, setP3tFilter] = useState(\"\");\r\n  const [sortConfig, setSortConfig] = useState({});\r\n\r\n  const dollarUS = Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let parsedData = [];\r\n    try {\r\n      parsedData = JSON.parse(text);\r\n    } catch (error) {\r\n      console.error(\"Error parsing JSON:\", error);\r\n    }\r\n\r\n    setData(parsedData);\r\n  };\r\n\r\n  const handleSort = (column) => {\r\n    let direction = 'ascending';\r\n    if (sortConfig.column === column && sortConfig.direction === 'ascending') {\r\n      direction = 'descending';\r\n    }\r\n    setSortConfig({ column, direction });\r\n  };\r\n\r\n  const sortedData = React.useMemo(() => {\r\n    let sortableData = [...data];\r\n    sortableData = sortableData.map((item) => {\r\n      item.expectancy = item.mprofit * item.mpodds - item.mloss * item.mlodds;\r\n      return item;\r\n    });\r\n\r\n    if (symbolFilter) {\r\n      sortableData = sortableData.filter((item) => item.symbol == symbolFilter);\r\n    }\r\n\r\n    if (dteFilter) {\r\n      sortableData = sortableData.filter((item) => item.days > dteFilter);\r\n    }\r\n\r\n    if (mprofitFilter) {\r\n      sortableData = sortableData.filter((item) => item.mprofit > mprofitFilter);\r\n    }\r\n\r\n    if (mlossFilter) {\r\n      sortableData = sortableData.filter((item) => item.mloss < mlossFilter);\r\n    }\r\n\r\n    if (mpoddsFilter) {\r\n      sortableData = sortableData.filter((item) => item.mpodds*100 > mpoddsFilter);\r\n    }\r\n\r\n    if (mloddsFilter) {\r\n      sortableData = sortableData.filter((item) => item.mlodds*100 > mloddsFilter);\r\n    }\r\n\r\n    if (ivrFilter) {\r\n      sortableData = sortableData.filter((item) => item.ivr*100 > mloddsFilter);\r\n    }\r\n\r\n    if (p3tFilter) {\r\n      sortableData = sortableData.filter((item) => item.expectancy > p3tFilter);\r\n    }\r\n\r\n\r\n    if (sortConfig.column) {\r\n      sortableData.sort((a, b) => {\r\n        if (sortConfig.direction === 'ascending') {\r\n          return a[sortConfig.column] > b[sortConfig.column] ? 1 : -1;\r\n        } else {\r\n          return a[sortConfig.column] < b[sortConfig.column] ? 1 : -1;\r\n        }\r\n      });\r\n    }\r\n    return sortableData;\r\n  }, [data, sortConfig, mpoddsFilter]);\r\n  \r\n  return (\r\n    <Container fluid>\r\n     <Row className=\"mx-auto mt-3 mb-2 p-1\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <textarea value={text} onChange={(e) => setText(e.target.value)} />\r\n        <Button type=\"submit\" variant=\"outline-secondary\" size=\"small\" className=\"mb-2\">Submit</Button>\r\n      </Form>\r\n      {data.length > 0 && (\r\n        <Table responsive size=\"sm\" className=\"sticky text-light border border-secondary text-center\">\r\n          <thead>\r\n            <tr>\r\n            <th onClick={() => handleSort('symbol')}>\r\n                Symbol\r\n                {<br></br>}\r\n                <input type=\"text\" placeholder=\"Filter ...\" value={symbolFilter} onChange={(e) => setSymbolFilter(e.target.value.toUpperCase())}/>\r\n                {sortConfig.column === 'symbol' ? (\r\n                  sortConfig.direction === 'ascending' ? '  🔼' : ' 🔽'\r\n                ) : null}\r\n              </th>\r\n              <th onClick={() => handleSort('text')}>\r\n                Strikes\r\n                {sortConfig.column === 'text' ? (\r\n                  sortConfig.direction === 'ascending' ? '  🔼' : ' 🔽'\r\n                ) : null}\r\n              </th>\r\n              <th onClick={() => handleSort('days')}>\r\n                DTE\r\n                {<br></br>}\r\n                <input type=\"text\" placeholder=\"Filter ...\" value={dteFilter} onChange={(e) => setDteFilter(e.target.value)}/>\r\n                {sortConfig.column === 'days' ? (\r\n                  sortConfig.direction === 'ascending' ? '  🔼' : ' 🔽'\r\n                ) : null}\r\n              </th>\r\n              <th onClick={() => handleSort('mprofit')}>\r\n                Max Profit\r\n                {<br></br>}\r\n                <input type=\"text\" placeholder=\"Filter ...\" value={mprofitFilter} onChange={(e) => setMprofitFilter(e.target.value)}/>\r\n                {sortConfig.column === 'mprofit' ? (\r\n                  sortConfig.direction === 'ascending' ? '🔼' : '🔽'\r\n                ) : null}\r\n                </th>\r\n                <th onClick={() => handleSort('mloss')}>\r\n                Max Loss\r\n                {<br></br>}\r\n                <input type=\"text\" placeholder=\"Filter ...\" value={mlossFilter} onChange={(e) => setMlossFilter(e.target.value)}/>\r\n                {sortConfig.column === 'mloss' ? (\r\n                  sortConfig.direction === 'ascending' ? '🔼' : '🔽'\r\n                ) : null}\r\n              </th>\r\n              <th onClick={() => handleSort('mpodds')}>\r\n                Chance Max Profit {<br></br>}\r\n                <input type=\"text\" placeholder=\"Filter ...\" value={mpoddsFilter} onChange={(e) => setMpoddsFilter(e.target.value)}/>\r\n                {sortConfig.column === 'mpodds' ? (\r\n                  sortConfig.direction === 'ascending' ? '🔼' : '🔽'\r\n                ) : null}\r\n              </th>\r\n              <th onClick={() => handleSort('mlodds')}>\r\n                Chance Max Loss\r\n                {<br></br>}\r\n                <input type=\"text\" placeholder=\"Filter ...\" value={mloddsFilter} onChange={(e) => setMloddsFilter(e.target.value)}/>\r\n                {sortConfig.column === 'mlodds' ? (\r\n                  sortConfig.direction === 'ascending' ? '🔼' : '🔽'\r\n                ) : null}\r\n              </th>\r\n              <th onClick={() => handleSort('IV Rank')}>\r\n                IV Rank\r\n                {<br></br>}\r\n                <input type=\"text\" placeholder=\"Filter ...\" value={ivrFilter} onChange={(e) => setIvrFilter(e.target.value)}/>\r\n                {sortConfig.column === 'IV Rank' ? (\r\n                  sortConfig.direction === 'ascending' ? '🔼' : '🔽'\r\n                ) : null}\r\n              </th>\r\n              <th onClick={() => handleSort('expectancy')}>\r\n                Probable Profit Per Trade (P3T)\r\n                {<br></br>}\r\n                <input type=\"text\" placeholder=\"Filter ...\" value={p3tFilter} onChange={(e) => setP3tFilter(e.target.value)}/>\r\n                {sortConfig.column === 'expectancy' ? (\r\n                  sortConfig.direction === 'ascending' ? '🔼' : '🔽'\r\n                ) : null}\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {sortedData.map((item, index) => (\r\n              <tr key={index}>\r\n                <td>{item.symbol}</td>\r\n                <td>{item.text}</td>\r\n                <td>{item.days}</td>\r\n                <td>{dollarUS.format(Math.round(item.mprofit))}</td>\r\n                <td>{dollarUS.format(Math.round(item.mloss))}</td>\r\n                <td>{Math.round(item.mpodds*100)}%</td>\r\n                <td>{Math.round(item.mlodds*100)}%</td>\r\n                <td>{Math.round(item.ivr)}%</td>\r\n                <td>{dollarUS.format(Math.round(item.expectancy))}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n      </Row>\r\n      </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\nimport App from './App'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n\r\n"],"sourceRoot":""}